【pro1_1】基于go实现纠删码
代码结构说明：
pro_1：这里存放RS的实现
src：这里存放的是reedsolomon包（运行的时候要修改为自定义文件的路径，否则会识别不到）
testdata：这里存放的是测试数据
main.go：主函数


<1>参考资料
{1.1}golang分布式存储 读书笔记(3)——数据冗余之RS码
https://www.jishuwen.com/d/2dPe
{1.2}golang文件存储纠删码实现
https://developer.aliyun.com/article/741560?spm=5176.12901015.0.i12901015.461a525caguz51
{1.3}官方文档
https://godoc.org/github.com/klauspost/reedsolomon


<2>实现过程
go get -u -v github.com/klauspost/reedsolomon
-->执行生成src/github.com/klauspost
注：以下过程采用了 4+2 模式

import "SimpleStorage/pro_primary/pro_1"
//编码
pro_1.SimpleEncoder()
//解码
pro_1.SimpleDecoder()


<3>编码Encoder

-->执行结果
Opening F:/GoCode/testdata/RS.txt
File split into 6 data+parity shards with 20 bytes/shard.
Writing to RS.txt.0
Writing to RS.txt.1
Writing to RS.txt.2
Writing to RS.txt.3
Writing to RS.txt.4
Writing to RS.txt.5

-->结果描述
每个shard（分片）是20个字节，生成了6个文件，test.0 是 20个 A ，test.1 是 20个 B ，test.2 是 20个 C ，test.3 是 20个 D ，正好可以
拼接成完整的文件。


<4>解码Decoder

-->执行结果

{4.1}没有数据丢失
No reconstruction needed
Writing data to F:/GoCode/testdata/RS-bak.txt

{4.2}丢失2块数据
Error reading file open F:/GoCode/testdata/RS.txt.1: The system cannot find the file specified.
Error reading file open F:/GoCode/testdata/RS.txt.4: The system cannot find the file specified.
Verification failed.Reconstruction data
Writing data to F:/GoCode/testdata/RS-bak.txt

{4.3}丢失3块数据
Error reading file open F:/GoCode/testdata/RS.txt.1: The system cannot find the file specified.
Error reading file open F:/GoCode/testdata/RS.txt.4: The system cannot find the file specified.
Error reading file open F:/GoCode/testdata/RS.txt.5: The system cannot find the file specified.
Verification failed.Reconstruction data
Reconstruct failed -  too few shards given


<5>未解决的问题
{5.1}分块后的数据没有分开存放到不同的目录下，相当于分盘存储。
{5.2}当数据丢失后，重构出来的新数据应该再次编码并替换之前存放的分块数据。
