【pro_3】基于go实现简单常用的hash方法

<1>参考资料
{1.1}Go hash算法的支持
https://blog.csdn.net/benben_2015/article/details/80146147
{1.2}Go 中 io 包的使用方法
https://segmentfault.com/a/1190000015591319

<2>执行结果
go crypto标准包包含了一些常用的哈希算法，例如md5、sha1、sha256、sha512等。

/**
	需要特别注意的地方：
	sha1:		h := sha1.New()			sha1.Sum(data)
	sha256:		h := sha256.New()		sha256.Sum256(data)
*/

{2.1}sha1
a17b4a110495e1c4708fa033db89d6f6133d6a48
a17b4a110495e1c4708fa033db89d6f6133d6a48
a17b4a110495e1c4708fa033db89d6f6133d6a48

{2.2}sha256
92b0e75ef31f5a35bd3e9c6b4709b8a99f94eb2bfe9c712712fdbdebb56f1c09
92b0e75ef31f5a35bd3e9c6b4709b8a99f94eb2bfe9c712712fdbdebb56f1c09
92b0e75ef31f5a35bd3e9c6b4709b8a99f94eb2bfe9c712712fdbdebb56f1c09

<3>未解决的问题
{3.1}该方式是针对单一文件的读取，应该要遍历同一路径下，所有 文件夹里面的所有文件/文件 进行处理，这样有实践意义。
{3.2}没有用到数据库，应该将 文件名 和 哈希函数值进行保存。
